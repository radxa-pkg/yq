name: Build & Release
on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Update submodule
        id: update
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pushd src
            git fetch
            version_prefix=v
            latest_tag="$(git tag -l "${version_prefix}*" | grep v[0-9] | sort -rV | head -n 1)"
            latest_release="$(echo $latest_tag | sed "s/${version_prefix}//")"
            echo "latest_release=$latest_release" >> $GITHUB_OUTPUT
            git switch --detach $latest_tag
          popd
          echo "current_release=$(gh release list -L 1 | awk '{print $1}')" >> $GITHUB_OUTPUT
          if [ -n "$(git status -s)" ]
          then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add .
            git commit -m "bump version to $latest_release"
            git push
          fi

      - name: Build
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y qemu-user-static binfmt-support
          pushd src
            sed -i "s|amd64|arm64|g" scripts/release-deb.sh
            sed -i "s|docker build|docker build --platform linux/arm64|g" scripts/release-deb.sh
            sed -i "s|docker run|docker run --platform linux/arm64|g" scripts/release-deb.sh
            sed -i "s|devscripts|devscripts sudo|g" scripts/release-deb.sh
            sed -i 's|-u "$(id -u)"|-u 0:0|g' scripts/release-deb.sh
            sed -i 's|  "${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}"|  "${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}" bash -c "sed -i -E \\"s/^(yq):(x?):([0-9]+):([0-9]+):(.*):(.*):(.*)$/\\1:\\2:$(id -u):$(id -g):\\5:\\6:\\7/\\" /etc/passwd \&\& sudo -u yq /usr/bin/build.sh"|g' scripts/release-deb.sh
            scripts/release-deb.sh ${{ steps.update.outputs.latest_release }} -d main -o ..
          popd
          ls -la

      - name: Release
        if: steps.update.outputs.current_release != steps.update.outputs.latest_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.update.outputs.latest_release }}
          body_path: README.md
          token: ${{ secrets.GITHUB_TOKEN }}
          target_commitish: main
          draft: false
          files: |
            *.deb
