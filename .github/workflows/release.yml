name: Build & Release
on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Update submodule
        id: update
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pushd src
            git fetch
            version_prefix=v
            latest_tag="$(git tag -l "${version_prefix}*" | grep v[0-9] | sort -rV | head -n 1)"
            latest_release="$(echo $latest_tag | sed "s/${version_prefix}//")"
            echo "latest_release=$latest_release" >> $GITHUB_OUTPUT
            git switch --detach $latest_tag
          popd
          echo "current_release=$(gh release list -L 1 | awk '{print $1}')" >> $GITHUB_OUTPUT
          if [ -n "$(git status -s)" ]
          then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add .
            git commit -m "bump version to $latest_release"
            git push
          fi

      - name: Set up Go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
        id: go
      
      - name: Get dependencies
        run: |
          pushd src
            sudo apt-get update
            sudo apt-get build-dep --no-install-recommends -y .
            sudo apt-get install --no-install-recommends -y devscripts lintian
            go get -v -t -d ./...
            if [ -f Gopkg.toml ]; then
                curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
                dep ensure
            fi
          popd

      - name: Build
        shell: bash -l {0}
        run: |
          pushd src
            export PATH="${PATH}:$(go env GOPATH)/bin"
            scripts/devtools.sh
            ln -s $(go env GOROOT) /usr/local/go
            debuild --no-sign
          popd

      - name: Release
        if: steps.update.outputs.current_release != steps.update.outputs.latest_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.update.outputs.latest_release }}
          body_path: README.md
          token: ${{ secrets.GITHUB_TOKEN }}
          target_commitish: main
          draft: false
          files: |
            *.deb
